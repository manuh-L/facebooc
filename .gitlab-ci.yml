stages:
- Check
- SCA
- Build
- Package
- Image
- deploy
- review
- dast
- staging
- canary
- production
- performance
- cleanup
- test


#default:
#  before_script:
#    - docker login -u $HARBOR_USERNAME -p $HARBOR_PASSWORD $HARBOR_HOST

cpp:
  stage: Check
  tags:
    - dck
  image:
    name: neszt/cppcheck-docker
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin'
  script:
    - cppcheck .

cpp_report:
  stage: Check
  tags:
    - docker
  image: rockylinux:9.1
  script:
    - yum -y install python3-pip
    - python3 -m pip install -U cppcheck_codequality
    - cppcheck-codequality --input-file=cppcheck_out.xml --output-file=cppcheck.json
    - if cat cppcheck_out.xml | grep -q "\"error\""; then echo "ERRORS have been detected"; exit 1; fi;
  artifacts:
    reports:
      codequality: cppcheck.json
  dependencies:
    - cpp
  needs:
    - job: cpp

kics:
  stage: Check
  tags:
    - docker
  image:
    name: checkmarx/kics:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/app/bin'
  script:
    - kics scan -p $(pwd)

compile:
  stage: Build
  tags:
    - dck
  image:
    name: harbor.lab.com/library/make:v1.1
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin'
  script:
    - make all
  artifacts:
    paths:
    - bin/facebooc
#    untracked: true
#    when: on_success
    expire_in: "7 days"



image build:
  stage: Package
  tags:
    - local
  script:
    - docker image build -t "${HARBOR_HOST}/${HARBOR_PROJECT}/fb:test" -f fb.Dockerfile .
  dependencies:
    - compile
  needs:
    - job: compile
      artifacts: true

Scan:
  stage: Image
  tags:
    - docker
  image: 
    name: aquasec/trivy:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin'
  script:
    - trivy image --exit-code 1 "${HARBOR_HOST}/${HARBOR_PROJECT}/fb:test"
  dependencies:
    - image build
  needs:
    - job: image build


upload to registry:
  stage: Image
  tags:
    - local
  script:
    - docker login -u $HARBOR_USERNAME -p $HARBOR_PASSWORD $HARBOR_HOST
    - docker push "${HARBOR_HOST}/${HARBOR_PROJECT}"/fb:test #${CI_COMMIT_TAG}"
  dependencies:
    - Scan
  needs:
    - job: Scan

deploy:
  stage: test
  tags:
    - local
  environment: test
  script:
    - echo $KUBECONFIG
    - kubectl config get-contexts
    - kubectl config use-context kind-dev 
    - kubectl get no
    - cd "$(pwd)/k8s/"
    - kubectl apply -f fb.yml -n test
  dependencies:
    - upload to registry
  needs:
    - job: upload to registry